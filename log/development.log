Started GET "/" for ::1 at 2019-01-12 16:27:01 -0500
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/railties-5.2.2/lib/rails/templates/rails/welcome/index.html.erb (3.8ms)
Completed 200 OK in 21ms (Views: 10.7ms | ActiveRecord: 0.0ms)


  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ bin/rails:9
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  â†³ bin/rails:9
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
Migrating to CreateLinks (20190112213019)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.5ms)[0m  [1m[35mCREATE TABLE "links" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "url" varchar, "description" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/migrate/20190112213019_create_links.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20190112213019"]]
  â†³ bin/rails:9
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 21:30:25.715310"], ["updated_at", "2019-01-12 21:30:25.715310"]]
  â†³ bin/rails:9
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
Migrating to CreateProducts (20190112213728)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
Migrating to CreateProducts (20190112213805)
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/migrate/20190112213805_create_products.rb:3
  [1m[35m (0.4ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/migrate/20190112213805_create_products.rb:3
  [1m[36mActiveRecord::SchemaMigration Create (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20190112213805"]]
  â†³ bin/rails:9
  [1m[35m (2.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "price", "inventory_count", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["title", "apple"], ["price", 1.59], ["inventory_count", 39.0], ["created_at", "2019-01-12 21:41:49.710111"], ["updated_at", "2019-01-12 21:41:49.710111"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mProduct Create (0.8ms)[0m  [1m[32mINSERT INTO "products" ("title", "price", "inventory_count", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["title", "hat"], ["price", 8.0], ["inventory_count", 3.0], ["created_at", "2019-01-12 21:42:10.223891"], ["updated_at", "2019-01-12 21:42:10.223891"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2019-01-12 16:49:08 -0500
  
NameError (uninitialized constant GraphiQL):
  
config/routes.rb:3:in `block in <main>'
config/routes.rb:1:in `<main>'
Started GET "/graphiql" for ::1 at 2019-01-12 16:49:22 -0500
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
  
ActionController::RoutingError (No route matches [GET] "/graphiql"):
  
actionpack (5.2.2) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.2) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.2) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.2) lib/rails/rack/logger.rb:26:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.6) lib/rack/method_override.rb:22:in `call'
rack (2.0.6) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.2) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.6) lib/rack/sendfile.rb:111:in `call'
railties (5.2.2) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2019-01-12 16:50:45 -0500
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (872.6ms)
Completed 200 OK in 895ms (Views: 883.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 16:50:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Number' for #<GraphQL::Define::TypeDefiner:0x00007f9d710c9138>):
  
app/graphql/types/product_type.rb:7:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 16:51:10 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n", "variables"=>nil, "graphql"=>{"query"=>"\n", "variables"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Number' for #<GraphQL::Define::TypeDefiner:0x00007f9d710c9138>):
  
app/graphql/types/product_type.rb:7:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-01-12 16:51:52 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (10.8ms)
Completed 200 OK in 26ms (Views: 21.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 16:51:53 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Number' for #<GraphQL::Define::TypeDefiner:0x00007f9d710c9138>):
  
app/graphql/types/product_type.rb:7:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-01-12 16:54:50 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (8.6ms)
Completed 200 OK in 22ms (Views: 18.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 16:54:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
LoadError (cannot load such file -- /Users/rachelharrison/shopify-challenge/app/graphql/queries):
  
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphql" for ::1 at 2019-01-12 16:56:35 -0500
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.2.2) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.2) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.2) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.2) lib/rails/rack/logger.rb:26:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.6) lib/rack/method_override.rb:22:in `call'
rack (2.0.6) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.2) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.6) lib/rack/sendfile.rb:111:in `call'
railties (5.2.2) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started GET "/graphiql" for ::1 at 2019-01-12 16:56:58 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (11.5ms)
Completed 200 OK in 26ms (Views: 21.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 16:56:58 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Number' for #<GraphQL::Define::TypeDefiner:0x00007f9d710c9138>):
  
app/graphql/types/product_type.rb:7:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-01-12 16:58:03 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (14.0ms)
Completed 200 OK in 32ms (Views: 25.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 16:58:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Numeric' for #<GraphQL::Define::TypeDefiner:0x00007f9d710c9138>):
  
app/graphql/types/product_type.rb:7:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-01-12 16:59:17 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (9.8ms)
Completed 200 OK in 25ms (Views: 20.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 16:59:18 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 40ms (Views: 4.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:05:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts: {\n  \n}\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts: {\n  \n}\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:05:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    id\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:05:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    id,\n    price,\n    inventory_count\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    id,\n    price,\n    inventory_count\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:05:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    id\n    price\n    inventory_count\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    id\n    price\n    inventory_count\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphql" for ::1 at 2019-01-12 17:05:54 -0500
  
ActionController::RoutingError (No route matches [GET] "/graphql"):
  
actionpack (5.2.2) lib/action_dispatch/middleware/debug_exceptions.rb:65:in `call'
web-console (3.7.0) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.7.0) lib/web_console/middleware.rb:30:in `block in call'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `catch'
web-console (3.7.0) lib/web_console/middleware.rb:20:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'
railties (5.2.2) lib/rails/rack/logger.rb:38:in `call_app'
railties (5.2.2) lib/rails/rack/logger.rb:26:in `block in call'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:71:in `block in tagged'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:28:in `tagged'
activesupport (5.2.2) lib/active_support/tagged_logging.rb:71:in `tagged'
railties (5.2.2) lib/rails/rack/logger.rb:26:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/request_id.rb:27:in `call'
rack (2.0.6) lib/rack/method_override.rb:22:in `call'
rack (2.0.6) lib/rack/runtime.rb:22:in `call'
activesupport (5.2.2) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (5.2.2) lib/action_dispatch/middleware/static.rb:127:in `call'
rack (2.0.6) lib/rack/sendfile.rb:111:in `call'
railties (5.2.2) lib/rails/engine.rb:524:in `call'
puma (3.12.0) lib/puma/configuration.rb:225:in `call'
puma (3.12.0) lib/puma/server.rb:658:in `handle_request'
puma (3.12.0) lib/puma/server.rb:472:in `process_client'
puma (3.12.0) lib/puma/server.rb:332:in `block in run'
puma (3.12.0) lib/puma/thread_pool.rb:133:in `block in spawn_thread'
Started POST "/graphql" for ::1 at 2019-01-12 17:05:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    id\n    price\n    inventory_count\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    id\n    price\n    inventory_count\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:06:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\n\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\n\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:08:17 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\tid\n\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\tid\n\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:08:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\tid\n\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\tid\n\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:11:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\tprice\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\tprice\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:11:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\tproduct\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\tproduct\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:12:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\ttitle\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\ttitle\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:13:03 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\ttitle\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\ttitle\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:13:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\ttitle\n    id\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\ttitle\n    id\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-01-12 17:13:31 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (14.9ms)
Completed 200 OK in 32ms (Views: 26.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:13:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 38ms (Views: 8.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:13:40 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\ttitle\n    id\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\ttitle\n    id\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
ArgumentError (wrong number of arguments (given 3, expected 2)):
  
app/graphql/types/query_type.rb:5:in `block (3 levels) in <main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:14:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n\t\ttitle\n    id\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n\t\ttitle\n    id\n   }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 19ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:14:52 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    \n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    \n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:15:08 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:15:31 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 23ms (Views: 0.3ms | ActiveRecord: 0.8ms)


Started GET "/graphiql" for ::1 at 2019-01-12 17:25:36 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (8.0ms)
Completed 200 OK in 23ms (Views: 18.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:25:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-01-12 17:25:46 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (9.6ms)
Completed 200 OK in 24ms (Views: 19.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:25:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:25:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:26:34 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-01-12 17:26:42 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (11.3ms)
Completed 200 OK in 28ms (Views: 22.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:26:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for ::1 at 2019-01-12 17:27:18 -0500
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (238.0ms)
Completed 200 OK in 261ms (Views: 248.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:27:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 10ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:27:23 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:30:45 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:31:04 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 23ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:31:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:32:13 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Graphql):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:32:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 8ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:33:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:39:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateProduct):
  
app/graphql/types/mutation_type.rb:5:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 17:40:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    id\n    price\n   }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 18ms (Views: 0.3ms | ActiveRecord: 0.9ms)


Started GET "/graphiql" for ::1 at 2019-01-12 17:41:01 -0500
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (212.2ms)
Completed 200 OK in 234ms (Views: 222.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:41:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 44ms (Views: 4.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:41:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  createProduct('Reid', 1.69, 1)\n}\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  createProduct('Reid', 1.69, 1)\n}\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:46:56 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  createProduct (\n    title: \"Reid\",\n    price: 800000.90,\n    inventory_count: 1\n  ){\n    title\n    price\n    inventory_count\n  }\n}\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  createProduct (\n    title: \"Reid\",\n    price: 800000.90,\n    inventory_count: 1\n  ){\n    title\n    price\n    inventory_count\n  }\n}\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:47:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n  createProduct (\n    title: \"Reid\",\n    price: 800000.90,\n    inventory_count: 1\n  ){\n    title\n    price\n    inventory_count\n  }\n}\n\n", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n  createProduct (\n    title: \"Reid\",\n    price: 800000.90,\n    inventory_count: 1\n  ){\n    title\n    price\n    inventory_count\n  }\n}\n\n", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[36mProduct Create (0.5ms)[0m  [1m[32mINSERT INTO "products" ("title", "price", "inventory_count", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["title", "Reid"], ["price", 800000.9], ["inventory_count", 1.0], ["created_at", "2019-01-12 22:47:33.238427"], ["updated_at", "2019-01-12 22:47:33.238427"]]
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  â†³ app/graphql/resolvers/create_product.rb:9
Completed 200 OK in 89ms (Views: 0.3ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 17:47:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    price\n    inventory_count\n  }\n}\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    price\n    inventory_count\n  }\n}\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2019-01-12 18:14:25 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n{\n  allProducts {\n    title\n    price\n    inventory_count\n  }\n}\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"\n{\n  allProducts {\n    title\n    price\n    inventory_count\n  }\n}\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 20ms (Views: 0.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for ::1 at 2019-01-12 18:14:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProduct (title: \"\"){\n  \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProduct (title: \"\"){\n  \n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 18:14:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProduct (title: \"\"){\n  \ttitle\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProduct (title: \"\"){\n  \ttitle\n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-12 18:15:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 3ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `arg' for #<Resolvers::CreateProduct:0x00007f8606b96868>
Did you mean?  args):
  
app/graphql/resolvers/create_product.rb:9:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 18:15:19 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `arg' for #<Resolvers::CreateProduct:0x00007f8606b96868>
Did you mean?  args):
  
app/graphql/resolvers/create_product.rb:9:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 18:15:36 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 16ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `is_blank?' for "":String
Did you mean?  blank?):
  
app/graphql/resolvers/create_product.rb:9:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 18:15:47 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 11ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Error' for #<Resolvers::CreateProduct:0x00007f8606d5ad70>):
  
app/graphql/resolvers/create_product.rb:10:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-12 18:17:26 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil}}
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[36mProduct Create (0.4ms)[0m  [1m[32mINSERT INTO "products" ("title", "price", "inventory_count", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["title", ""], ["price", 1.34], ["inventory_count", 1.0], ["created_at", "2019-01-12 23:17:26.717201"], ["updated_at", "2019-01-12 23:17:26.717201"]]
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ app/graphql/resolvers/create_product.rb:9
Completed 200 OK in 19ms (Views: 0.2ms | ActiveRecord: 2.0ms)


  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products"[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/schema.rb:15
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:15
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (1.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190112213805)[0m
  â†³ db/schema.rb:13
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 23:31:22.855269"], ["updated_at", "2019-01-12 23:31:22.855269"]]
  â†³ db/schema.rb:13
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "products"[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/schema.rb:15
  [1m[35m (3.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:15
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (1.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190112213805)[0m
  â†³ db/schema.rb:13
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 23:31:22.880978"], ["updated_at", "2019-01-12 23:31:22.880978"]]
  â†³ db/schema.rb:13
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2019-01-12 23:31:22.884572"], ["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (8.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "products"[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/schema.rb:15
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:15
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (1.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "products"[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/schema.rb:15
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Update (0.8ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "development"], ["updated_at", "2019-01-12 23:32:22.100068"], ["key", "environment"]]
  â†³ db/schema.rb:13
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Update (0.9ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2019-01-12 23:32:22.108718"], ["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Load (7.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/bin/rake:23
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/bin/rake:23
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/bin/rake:23
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/bin/rake:23
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/bin/rake:23
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "products"[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/schema.rb:15
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:15
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (1.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190112213805)[0m
  â†³ db/schema.rb:13
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 23:41:07.366015"], ["updated_at", "2019-01-12 23:41:07.366015"]]
  â†³ db/schema.rb:13
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "products"[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/schema.rb:15
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:15
  [1m[35m (2.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  â†³ db/schema.rb:13
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[35m (1.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20190112213805)[0m
  â†³ db/schema.rb:13
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Create (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2019-01-12 23:41:07.391975"], ["updated_at", "2019-01-12 23:41:07.391975"]]
  â†³ db/schema.rb:13
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Update (0.3ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2019-01-12 23:41:07.395585"], ["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
Started GET "/graphiql" for ::1 at 2019-01-14 14:33:41 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (43.0ms)
Completed 200 OK in 65ms (Views: 54.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-14 14:33:42 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 76ms (Views: 8.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-14 14:33:46 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createProduct (title: \"\", price: 1.34, inventory_count: 1){\n  \ttitle\n  }\n}\n", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[36mProduct Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "products" WHERE "products"."title" = ? LIMIT ?[0m  [["title", ""], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  â†³ app/graphql/resolvers/create_product.rb:9
Completed 200 OK in 32ms (Views: 0.3ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for ::1 at 2019-01-14 15:01:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>" {\n  getProduct (title: \"\"){\n  \ttitle\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>" {\n  getProduct (title: \"\"){\n  \ttitle\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 21ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2019-01-14 15:02:23 -0500
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (245.7ms)
Completed 200 OK in 272ms (Views: 259.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-14 15:02:24 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 50ms (Views: 5.6ms | ActiveRecord: 0.0ms)


  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (1.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "products"[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/schema.rb:15
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/schema.rb:13
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.9ms)[0m  [1m[35mDROP TABLE IF EXISTS "products"[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  â†³ db/schema.rb:15
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "products" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "price" decimal, "inventory_count" decimal, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  â†³ db/schema.rb:15
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ db/schema.rb:13
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "development"], ["updated_at", "2019-01-20 19:02:06.951423"], ["key", "environment"]]
  â†³ db/schema.rb:13
  [1m[35m (0.6ms)[0m  [1m[36mcommit transaction[0m
  â†³ db/schema.rb:13
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  â†³ bin/rails:9
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  â†³ bin/rails:9
  [1m[36mActiveRecord::InternalMetadata Update (0.2ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2019-01-20 19:02:06.954354"], ["key", "environment"]]
  â†³ bin/rails:9
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  â†³ bin/rails:9
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ bin/rails:9
Started GET "/graphiql" for ::1 at 2019-01-20 14:39:11 -0500
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  â†³ /Users/rachelharrison/.gem/ruby/2.5.3/gems/activerecord-5.2.2/lib/active_record/log_subscriber.rb:98
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/rachelharrison/.gem/ruby/2.5.3/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (235.5ms)
Completed 200 OK in 263ms (Views: 248.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:39:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 49ms (Views: 5.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:39:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:44:14 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `GetAllProducts' for Resolvers:Module):
  
app/graphql/types/query_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-20 14:44:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:45:32 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT  "products".* FROM "products" LIMIT ?[0m  [["LIMIT", 11]]
  â†³ /Users/rachelharrison/.rubies/ruby-2.5.3/lib/ruby/gems/2.5.0/gems/did_you_mean-1.2.0/lib/did_you_mean/core_ext/name_error.rb:8
Completed 500 Internal Server Error in 15ms (ActiveRecord: 0.0ms)


  
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT  "products".* FROM "products" LIMIT ?[0m  [["LIMIT", 11]]
  â†³ /Users/rachelharrison/.rubies/ruby-2.5.3/lib/ruby/gems/2.5.0/gems/did_you_mean-1.2.0/lib/did_you_mean/core_ext/name_error.rb:8
NoMethodError (undefined method `title' for #<ActiveRecord::Relation []>):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-20 14:46:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
GraphQL::Schema::InvalidTypeError (Query is invalid: field "allProducts" type must return GraphQL::BaseType, not NilClass (nil)):
  
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-20 14:49:16 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:49:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 15ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:49:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/graphql/resolvers/get_all_products.rb:8
  [1m[36mCACHE Product Load (0.0ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:50:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n\tcreateProduct(\"Test\",1.23,'9) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n\tcreateProduct(\"Test\",1.23,'9) {\n    title\n  }\n}\n\n\n", "variables"=>nil}}
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:50:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n\tcreateProduct(\"Test\",1.23,9) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n\tcreateProduct(\"Test\",1.23,9) {\n    title\n  }\n}\n\n\n", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:50:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n\tcreateProduct(titile: \"Test\",price: 1.23,inventory_count: ) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n\tcreateProduct(titile: \"Test\",price: 1.23,inventory_count: ) {\n    title\n  }\n}\n\n\n", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:50:57 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n\tcreateProduct(titile: \"Test\",price: 1.23,inventory_count: ) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n\tcreateProduct(titile: \"Test\",price: 1.23,inventory_count: ) {\n    title\n  }\n}\n\n\n", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:51:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n\tcreateProduct(title: \"Test\",price: 1.23,inventory_count: ) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n\tcreateProduct(title: \"Test\",price: 1.23,inventory_count: ) {\n    title\n  }\n}\n\n\n", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:51:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation{\n\tcreateProduct(title: \"Test\", price: 1.23,inventory_count: 9 ) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "graphql"=>{"query"=>"mutation{\n\tcreateProduct(title: \"Test\", price: 1.23,inventory_count: 9 ) {\n    title\n  }\n}\n\n\n", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[36mProduct Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "products" WHERE "products"."title" = ? LIMIT ?[0m  [["title", "Test"], ["LIMIT", 1]]
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[36mProduct Create (0.6ms)[0m  [1m[32mINSERT INTO "products" ("title", "price", "inventory_count", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["title", "Test"], ["price", 1.23], ["inventory_count", 9.0], ["created_at", "2019-01-20 19:51:48.288971"], ["updated_at", "2019-01-20 19:51:48.288971"]]
  â†³ app/graphql/resolvers/create_product.rb:9
  [1m[35m (6.6ms)[0m  [1m[36mcommit transaction[0m
  â†³ app/graphql/resolvers/create_product.rb:9
Completed 200 OK in 26ms (Views: 0.2ms | ActiveRecord: 8.1ms)


Started POST "/graphql" for ::1 at 2019-01-20 14:52:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.3ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2019-01-20 15:07:27 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::GetAllProducts::Boolean):
  
app/graphql/resolvers/get_all_products.rb:2:in `<class:GetAllProducts>'
app/graphql/resolvers/get_all_products.rb:1:in `<main>'
app/graphql/types/query_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-20 15:07:38 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `Boolean' for nil:NilClass):
  
app/graphql/resolvers/get_all_products.rb:2:in `<class:GetAllProducts>'
app/graphql/resolvers/get_all_products.rb:1:in `<main>'
app/graphql/types/query_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-20 15:07:51 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 4ms (ActiveRecord: 0.0ms)


  
GraphQL::Define::NoDefinitionError (GraphQL::Argument can't define 'required'):
  
app/graphql/resolvers/get_all_products.rb:2:in `<class:GetAllProducts>'
app/graphql/resolvers/get_all_products.rb:1:in `<main>'
app/graphql/types/query_type.rb:4:in `block in <main>'
app/graphql/shopify_challenge_schema.rb:1:in `<main>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-20 15:09:28 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 19ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for ::1 at 2019-01-20 15:09:48 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 24ms (Views: 0.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for ::1 at 2019-01-20 15:10:02 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts(in_stock: true) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts(in_stock: true) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products"[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for ::1 at 2019-01-20 15:12:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts(in_stock: true) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts(in_stock: true) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 14ms (ActiveRecord: 0.0ms)


  
NameError (undefined local variable or method `inventory_count' for #<Resolvers::GetAllProducts:0x00007fecf8ba0d00>):
  
app/graphql/resolvers/get_all_products.rb:10:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2019-01-20 15:12:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tallProducts(in_stock: true) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tallProducts(in_stock: true) {\n    title\n  }\n}\n\n\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mProduct Load (0.2ms)[0m  [1m[34mSELECT "products".* FROM "products" WHERE (inventory_count > 0)[0m
  â†³ app/controllers/graphql_controller.rb:10
Completed 200 OK in 18ms (Views: 0.2ms | ActiveRecord: 0.9ms)


